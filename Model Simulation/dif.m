function [y] = dif(ul,ur,uu,ud,uc,uul,uur,udl,udr,ull,urr,uuu,udd,params)
%% diffusion part
%   inputs: 
%       location info: 
%       (ul,ur,uu,ud,uc,uul,uur,udl,udr,ull,urr,uuu,udd)
%       corresponding to
%       [ud(i,j-1) ud(i,j+1) ud(i-1,j) ud(i+1,j) ud(i,j) 
%       ud(i-1,j-1) ud(i-1,j+1) ud(i+1,j-1) ud(i+1,j+1) 
%       ud(i,j-2) ud(i,j+2) ud(i-2,j) ud(i+2,j)]
%       parameters:
%       params = [alp d d1 d2 alp_type N]
% Jinghao Chen, jinghc2@uci.edu

alp = params(1);
d = params(2);
d1 = params(3);
d2 = params(4);
alp_type = params(5);
h = 1/params(6);

% Different models classified by adhesion effects on the cell migration
% H: hindering model, P: promotion model, M: mixed model
% default: H2 model
if alp_type == 1 % H1 model
    y = d*(...
        d1*(ul.^2.*(1-uc).*(1-alp*ull)...
        +ur.^2.*(1-uc).*(1-alp*urr)...
        -uc.^2.*(1-ur).*(1-alp*ul)...
        -uc.^2.*(1-ul).*(1-alp*ur))...
        +d2*(uu.^2.*(1-uc).*(1-alp*uuu)...
        +ud.^2.*(1-uc).*(1-alp*udd)...
        -uc.^2.*(1-ud).*(1-alp*uu)...
        -uc.^2.*(1-uu).*(1-alp*ud)))/(h^2);

elseif alp_type == 2 % H2 model
    y = d*(...
        d1*(ul.^2.*(1-uc).*(1-alp*ull).*(1-alp*udl).*(1-alp*uul)...
        +ur.^2.*(1-uc).*(1-alp*urr).*(1-alp*udr).*(1-alp*uur)...
        -uc.^2.*(1-ur).*(1-alp*ul).*(1-alp*ud).*(1-alp*uu)...
        -uc.^2.*(1-ul).*(1-alp*ur).*(1-alp*ud).*(1-alp*uu))...
        +d2*(uu.^2.*(1-uc).*(1-alp*uuu).*(1-alp*uur).*(1-alp*uul)...
        +ud.^2.*(1-uc).*(1-alp*udd).*(1-alp*udr).*(1-alp*udl)...
        -uc.^2.*(1-ud).*(1-alp*uu).*(1-alp*ur).*(1-alp*ul)...
        -uc.^2.*(1-uu).*(1-alp*ud).*(1-alp*ur).*(1-alp*ul)))/(h^2);

elseif alp_type == 3 % P1 model
    y = d*(...
        d1*(ul.^2.*(1-uc).*(1+alp*uc)...
        +ur.^2.*(1-uc).*(1+alp*uc)...
        -uc.^2.*(1-ur).*(1+alp*ur)...
        -uc.^2.*(1-ul).*(1+alp*ul))...
        +d2*(uu.^2.*(1-uc).*(1+alp*uc)...
        +ud.^2.*(1-uc).*(1+alp*uc)...
        -uc.^2.*(1-ud).*(1+alp*ud)...
        -uc.^2.*(1-uu).*(1+alp*uu)))/(h^2);

elseif alp_type == 4 % P2 model
    y = d*(...
        d1*(ul.^2.*(1-uc).*(1+alp*uc).*(1+alp*udl).*(1+alp*uul)...
        +ur.^2.*(1-uc).*(1+alp*uc).*(1+alp*udr).*(1+alp*uur)...
        -uc.^2.*(1-ur).*(1+alp*ur).*(1+alp*ud).*(1+alp*uu)...
        -uc.^2.*(1-ul).*(1+alp*ul).*(1+alp*ud).*(1+alp*uu))...
        +d2*(uu.^2.*(1-uc).*(1+alp*uc).*(1+alp*uur).*(1+alp*uul)...
        +ud.^2.*(1-uc).*(1+alp*uc).*(1+alp*udr).*(1+alp*udl)...
        -uc.^2.*(1-ud).*(1+alp*ud).*(1+alp*ur).*(1+alp*ul)...
        -uc.^2.*(1-uu).*(1+alp*uu).*(1+alp*ur).*(1+alp*ul)))/(h^2);

elseif alp_type == 5 % M1 model
    y = d*(...
        d1*(ul.^2.*(1-uc).*(1+alp*uc).*(1-alp*ull)...
        +ur.^2.*(1-uc).*(1+alp*uc).*(1-alp*urr)...
        -uc.^2.*(1-ur).*(1+alp*ur).*(1-alp*ul)...
        -uc.^2.*(1-ul).*(1+alp*ul).*(1-alp*ur))...
        +d2*(uu.^2.*(1-uc).*(1+alp*uc).*(1-alp*uuu)...
        +ud.^2.*(1-uc).*(1+alp*uc).*(1-alp*udd)...
        -uc.^2.*(1-ud).*(1+alp*ud).*(1-alp*uu)...
        -uc.^2.*(1-uu).*(1+alp*uu).*(1-alp*ud)))/(h^2);

elseif alp_type == 6 % M2 model
    y = d*(...
        d1*(ul.^2.*(1-uc).*(1+alp*uc).*(1-alp*udl).*(1-alp*uul)...
        +ur.^2.*(1-uc).*(1+alp*uc).*(1-alp*udr).*(1-alp*uur)...
        -uc.^2.*(1-ur).*(1+alp*ur).*(1-alp*ud).*(1-alp*uu)...
        -uc.^2.*(1-ul).*(1+alp*ul).*(1-alp*ud).*(1-alp*uu))...
        +d2*(uu.^2.*(1-uc).*(1+alp*uc).*(1-alp*uur).*(1-alp*uul)...
        +ud.^2.*(1-uc).*(1+alp*uc).*(1-alp*udr).*(1-alp*udl)...
        -uc.^2.*(1-ud).*(1+alp*ud).*(1-alp*ur).*(1-alp*ul)...
        -uc.^2.*(1-uu).*(1+alp*uu).*(1-alp*ur).*(1-alp*ul)))/(h^2);

end

end