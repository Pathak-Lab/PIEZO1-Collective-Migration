function [y] = dif(ul,ur,uu,ud,uc,uul,uur,udl,udr,ull,urr,uuu,udd,params,ul2,ur2,uu2,ud2,uc2,Alp,D,D1)
% 2/21/2022
% diffusion
% inputs: 
% 
% location info: 
% (ul,ur,uu,ud,uc,uul,uur,udl,udr,ull,urr,uuu,udd)
% corresponding to
% [ud(i,j-1) ud(i,j+1) ud(i-1,j) ud(i+1,j) ud(i,j) 
% ud(i-1,j-1) ud(i-1,j+1) ud(i+1,j-1) ud(i+1,j+1) 
% ud(i,j-2) ud(i,j+2) ud(i-2,j) ud(i+2,j)]
%
% parameters:
% params = [alp d d1 d2 alp_type N]

alp = params(1);
d = params(2);
d1 = params(3);
d2 = params(4);
alp_type = params(5);
h = 1/params(6);

if nargin>14
    % total cell density for heterogeneous cell population
    uls = ul+ul2;
    urs = ur+ur2;
    uus = uu+uu2;
    uds = ud+ud2;
    ucs = uc+uc2;
    alp = Alp;
    d = D;
    d1 = D1;
else
    uls = ul;
    urs = ur;
    uus = uu;
    uds = ud;
    ucs = uc;
end

if alp_type == 1 % H1 model
    y = d*(...
        d1*(ul.^2.*(1-uc).*(1-alp*ull)...
        +ur.^2.*(1-uc).*(1-alp*urr)...
        -uc.^2.*(1-ur).*(1-alp*ul)...
        -uc.^2.*(1-ul).*(1-alp*ur))...
        +d2*(uu.^2.*(1-uc).*(1-alp*uuu)...
        +ud.^2.*(1-uc).*(1-alp*udd)...
        -uc.^2.*(1-ud).*(1-alp*uu)...
        -uc.^2.*(1-uu).*(1-alp*ud)))/(h^2);

elseif alp_type == 2 % H2 model
    y = d.*(...
        d1.*(ul.*uls.*(1-ucs).*(1-alp.*ull).*(1-alp.*udl).*(1-alp.*uul)...
        +ur.*urs.*(1-ucs).*(1-alp.*urr).*(1-alp.*udr).*(1-alp.*uur)...
        -uc.*ucs.*(1-urs).*(1-alp.*ul).*(1-alp.*ud).*(1-alp.*uu)...
        -uc.*ucs.*(1-uls).*(1-alp.*ur).*(1-alp.*ud).*(1-alp.*uu))...
        +d2.*(uu.*uus.*(1-ucs).*(1-alp.*uuu).*(1-alp.*uur).*(1-alp.*uul)...
        +ud.*uds.*(1-ucs).*(1-alp.*udd).*(1-alp.*udr).*(1-alp.*udl)...
        -uc.*ucs.*(1-uds).*(1-alp.*uu).*(1-alp.*ur).*(1-alp.*ul)...
        -uc.*ucs.*(1-uus).*(1-alp.*ud).*(1-alp.*ur).*(1-alp.*ul)))/(h^2);

elseif alp_type == 3 % P1 model
    y = d*(...
        d1*(ul.^2.*(1-uc).*(1+alp*uc)...
        +ur.^2.*(1-uc).*(1+alp*uc)...
        -uc.^2.*(1-ur).*(1+alp*ur)...
        -uc.^2.*(1-ul).*(1+alp*ul))...
        +d2*(uu.^2.*(1-uc).*(1+alp*uc)...
        +ud.^2.*(1-uc).*(1+alp*uc)...
        -uc.^2.*(1-ud).*(1+alp*ud)...
        -uc.^2.*(1-uu).*(1+alp*uu)))/(h^2);

elseif alp_type == 4 % P2 model
    y = d*(...
        d1*(ul.^2.*(1-uc).*(1+alp*uc).*(1+alp*udl).*(1+alp*uul)...
        +ur.^2.*(1-uc).*(1+alp*uc).*(1+alp*udr).*(1+alp*uur)...
        -uc.^2.*(1-ur).*(1+alp*ur).*(1+alp*ud).*(1+alp*uu)...
        -uc.^2.*(1-ul).*(1+alp*ul).*(1+alp*ud).*(1+alp*uu))...
        +d2*(uu.^2.*(1-uc).*(1+alp*uc).*(1+alp*uur).*(1+alp*uul)...
        +ud.^2.*(1-uc).*(1+alp*uc).*(1+alp*udr).*(1+alp*udl)...
        -uc.^2.*(1-ud).*(1+alp*ud).*(1+alp*ur).*(1+alp*ul)...
        -uc.^2.*(1-uu).*(1+alp*uu).*(1+alp*ur).*(1+alp*ul)))/(h^2);

elseif alp_type == 5 % M1 model
    y = d*(...
        d1*(ul.^2.*(1-uc).*(1+alp*uc).*(1-alp*ull)...
        +ur.^2.*(1-uc).*(1+alp*uc).*(1-alp*urr)...
        -uc.^2.*(1-ur).*(1+alp*ur).*(1-alp*ul)...
        -uc.^2.*(1-ul).*(1+alp*ul).*(1-alp*ur))...
        +d2*(uu.^2.*(1-uc).*(1+alp*uc).*(1-alp*uuu)...
        +ud.^2.*(1-uc).*(1+alp*uc).*(1-alp*udd)...
        -uc.^2.*(1-ud).*(1+alp*ud).*(1-alp*uu)...
        -uc.^2.*(1-uu).*(1+alp*uu).*(1-alp*ud)))/(h^2);

elseif alp_type == 6 % M2 model
    y = d*(...
        d1*(ul.^2.*(1-uc).*(1+alp*uc).*(1-alp*udl).*(1-alp*uul)...
        +ur.^2.*(1-uc).*(1+alp*uc).*(1-alp*udr).*(1-alp*uur)...
        -uc.^2.*(1-ur).*(1+alp*ur).*(1-alp*ud).*(1-alp*uu)...
        -uc.^2.*(1-ul).*(1+alp*ul).*(1-alp*ud).*(1-alp*uu))...
        +d2*(uu.^2.*(1-uc).*(1+alp*uc).*(1-alp*uur).*(1-alp*uul)...
        +ud.^2.*(1-uc).*(1+alp*uc).*(1-alp*udr).*(1-alp*udl)...
        -uc.^2.*(1-ud).*(1+alp*ud).*(1-alp*ur).*(1-alp*ul)...
        -uc.^2.*(1-uu).*(1+alp*uu).*(1-alp*ur).*(1-alp*ul)))/(h^2);

end

end